application tree structure: 

/bin
  /www
/config
  /passport.js
/models
  /user.js
/public
/routes
  /index.js
  /users.js
/views
  /layout.jade
  /login.jade
/app.js




passport.js
// config/passport.js

var passport = require("passport");
var LocalStrategy = require("passport-local").Strategy;
var User = require("../models/user"); // Adjust the path according to your project structure

// Passport local strategy for local-login, for example using username and password
passport.use(
  new LocalStrategy(function (username, password, done) {
    User.findOne({ username: username }, function (err, user) {
      if (err) {
        return done(err);
      }
      if (!user) {
        return done(null, false, { message: "Incorrect username." });
      }
      if (!user.validPassword(password)) {
        return done(null, false, { message: "Incorrect password." });
      }
      return done(null, user);
    });
  }),
);

// Serialize user into the session
passport.serializeUser(function (user, done) {
  done(null, user.id);
});

// Deserialize user from the session
passport.deserializeUser(function (id, done) {
  User.findById(id, function (err, user) {
    done(err, user);
  });
});

module.exports = passport;


Best to have a single centeral point where you define your database connection so it can be reused thought your application